FROM golang:1.21.3-alpine as builder
#RUN apk --no-cache add ca-certificates git gcc g++ libtool libc-dev musl-dev librdkafka-dev pkgconf libsasl cyrus-sasl
RUN apk --no-cache add ca-certificates git gcc g++ libtool libc-dev musl-dev pkgconf

ENV LIBRD_VER=2.3.0
RUN apk add --no-cache --virtual .make-deps bash make wget git gcc g++ && apk add --no-cache musl-dev zlib-dev openssl zstd-dev pkgconfig libc-dev && wget https://github.com/edenhill/librdkafka/archive/v${LIBRD_VER}.tar.gz && tar -xvf v${LIBRD_VER}.tar.gz && cd librdkafka-${LIBRD_VER} && ./configure --prefix /usr && make && make install && make clean && rm -rf librdkafka-${LIBRD_VER} && rm -rf v${LIBRD_VER}.tar.gz && apk del .make-deps
RUN export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig/
ENV PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig/

# Install librdkafka
# RUN echo " ------> Install librdkafka..."
# WORKDIR /home/
# RUN git clone https://github.com/confluentinc/librdkafka.git -b v2.3.0
# WORKDIR /home/librdkafka/
# RUN cmake -H. -B_cmake_build
# RUN cmake --build _cmake_build
# RUN cmake --build _cmake_build --target install

WORKDIR /app
COPY go.mod .
COPY go.sum .
RUN go mod download
COPY . .
RUN CGO_ENABLED=1 GOOS=linux go build -tags musl --ldflags "-extldflags -static" -a -o consumer consumer/consumer.go

FROM alpine:3.18.4 as runtime
COPY --from=builder /app/consumer /
EXPOSE 8080
CMD ["/bin/sh", "-c", "/consumer"]
